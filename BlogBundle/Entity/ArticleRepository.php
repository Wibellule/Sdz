<?php

namespace Sdz\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
  public function myFindAll()
    {
        $queryBuilder = $this->createQueryBuilder('a');

        // Méthode équivalente, mais plus longue :
        $queryBuilder = $this->_em
            ->createQueryBuilder()
            ->select('a')
            ->from($this->_entityName, 'a');

        // Dans un repository, $this->_entityName est le namespace de l'entité gérée
        // Ici il vaut donc Sdz\BlogBundle\Entity\Article

        // On a fini de construire notre requête

        // On récupère la Query à partir de QueryBuilder
        $query = $queryBuilder->getQuery();

        // On récupère les résultats à partir de la query
        $resultats = $query->getResult();

        // On retourne ces résultats
        return $resultats;

    }
    
    public function myFindOne($id)
    {
        // On passe par le QueryBuilder vide de l'EntityManager pour l'exemple
        $qb = $this->_em->createQueryBuilder();

        $qb->select('a')
           ->from('SdzBlogBundle:Article', 'a')
           ->where('a.id = :id')
           ->setParameter('id', $id);

        return $qb->getQuery()->getResult();
    }
    
    public function findByAuteurAndDate($auteur, $annee)
    {
        // On utilise le QueryBuilder crée par le repository directement pour gagner du temps
        // Plus besoin de faire le select() ne le from() par la suite
        $qb = $this->createQueryBuilder('a');

        $qb->where('a.auteur = :auteur')
            ->setParameter('auteur', $auteur)
           ->andWhere('a.date < :annee')
            ->setParameter('annee', $annee)
           ->orderBy('a.date', 'DESC');

        return $qb->getQuery()->getResult();

    }
    
    public function whereCurrentYear(\Doctrine\ORM\QueryBuilder $qb)
    {
        $qb->andWhere('a.date BETWEEN :debut AND :fin')
            ->setParameter('debut', new \DateTime(date('Y').'-01-01')) // Date entre le 1er janvier de cette année
            ->setParameter('fin', new \DateTime(date('Y').'-12-31')); // Et le 31 décembre de cette année

        return $qb;
    }
}
